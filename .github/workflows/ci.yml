name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build shared types
      run: npm run build:shared-types
    
    - name: Run linting
      run: npm run lint:frontend
    
    - name: Run type checking
      run: npm run type-check:frontend
    
    - name: Run unit tests
      run: npm run test:frontend
    
    - name: Build frontend
      run: npm run build:frontend

  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_USER: testuser
          POSTGRES_DB: texas42_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build shared types
      run: npm run build:shared-types
    
    - name: Run linting
      run: npm run lint:backend
    
    - name: Run type checking
      run: npm run type-check:backend
    
    - name: Run unit tests
      run: npm run test:backend
      env:
        DATABASE_URL: postgresql://testuser:testpass@localhost:5432/texas42_test
    
    - name: Build backend
      run: npm run build:backend

  # E2E tests are disabled until proper test infrastructure is set up
  # To enable e2e tests in CI:
  # 1. Ensure tests can run without backend (mock API calls)
  # 2. Or set up test database and backend services
  # 3. Configure Playwright for CI environment
