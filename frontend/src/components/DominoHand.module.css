/* DominoHand Component Styles - 2-row layout for Texas 42 */
@import '../styles/design-tokens.css';

.dominoHand {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-xxs);
  padding: calc(var(--space-xxs) * 1.5);
  background: var(--surface-overlay);
  border-radius: var(--radius-lg);
  min-height: var(--height-domino-hand);
  position: relative;
}

/* Compact mode for player cards */
.dominoHand.compact {
  gap: var(--space-xxs);
  padding: calc(var(--space-xxs) * 1.5);
  min-height: var(--height-domino-hand);
  transform: var(--transform-scale-compact);
  transform-origin: center;
}

.topRow {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: calc(var(--space-xxs) * 0.75);
  flex-wrap: nowrap;
}

.bottomRow {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: calc(var(--space-xxs) * 0.75);
  flex-wrap: nowrap;
  margin-top: var(--space-xxs);
}

/* Compact mode adjustments */
.dominoHand.compact .topRow,
.dominoHand.compact .bottomRow {
  gap: calc(var(--space-xxs) * 0.75);
}

.dominoHand.compact .bottomRow {
  margin-top: var(--space-xxs);
}

.handDomino {
  transition: var(--transition-all);
  position: relative;
}

.handDomino:hover {
  transform: translateY(calc(var(--space-xxs) * -1));
  z-index: 10;
}

.handDomino.selected {
  transform: translateY(calc(var(--space-xs) * -1));
  z-index: 20;
}

.dominoGap {
  width: var(--width-domino-gap);
  height: var(--height-domino-gap);
  border: var(--border-default) dashed var(--border-color-dashed);
  border-radius: var(--radius-base);
  background: var(--surface-overlay);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  opacity: var(--opacity-medium);
}

.dominoGap::before {
  content: '';
  width: var(--size-indicator);
  height: var(--size-indicator);
  border: var(--border-thin) solid var(--border-color-light);
  border-radius: var(--radius-circle);
  background: var(--surface-glass);
}

/* Responsive design */
.responsive {
  max-width: var(--width-full);
  overflow: visible;
}

/* Tablet and smaller screens */
@media (max-width: var(--breakpoint-md)) {
  .dominoHand {
    gap: calc(var(--space-xxs) * 1.5);
    padding: var(--space-xs);
    min-height: var(--height-domino-hand-tablet);
  }
  
  .topRow,
  .bottomRow {
    gap: var(--space-xxs);
  }
  
  .handDomino:hover {
    transform: translateY(calc(var(--space-xxs) * -0.5));
  }
  
  .handDomino.selected {
    transform: translateY(calc(var(--space-xxs) * -1));
  }
  
  .dominoGap {
    width: var(--width-domino-gap-tablet);
    height: var(--height-domino-gap-tablet);
  }
  
  .dominoGap::before {
    width: var(--size-indicator-tablet);
    height: var(--size-indicator-tablet);
  }
}

/* Mobile screens */
@media (max-width: var(--breakpoint-sm)) {
  .dominoHand {
    gap: var(--space-xxs);
    padding: calc(var(--space-xxs) * 1.5);
    min-height: var(--height-domino-hand);
  }
  
  .topRow,
  .bottomRow {
    gap: calc(var(--space-xxs) * 0.75);
  }
  
  .handDomino:hover {
    transform: translateY(calc(var(--space-xxs) * -0.25));
  }
  
  .handDomino.selected {
    transform: translateY(calc(var(--space-xxs) * -0.5));
  }
  
  .dominoGap {
    width: var(--width-domino-gap-mobile);
    height: var(--height-domino-gap-mobile);
  }
  
  .dominoGap::before {
    width: var(--size-indicator-mobile);
    height: var(--size-indicator-mobile);
  }
}

/* Very small screens - stack dominoes if needed */
@media (max-width: var(--breakpoint-xs)) {
  .topRow,
  .bottomRow {
    flex-wrap: wrap;
    max-width: var(--width-full);
  }
  
  .dominoHand {
    min-height: auto;
  }
}

/* Vertical orientation adjustments */
.dominoHand:has(.handDomino.vertical) .dominoGap {
  width: var(--width-domino-gap-vertical);
  height: var(--height-domino-gap-vertical);
}

@media (max-width: var(--breakpoint-md)) {
  .dominoHand:has(.handDomino.vertical) .dominoGap {
    width: var(--width-domino-gap-vertical-tablet);
    height: var(--height-domino-gap-vertical-tablet);
  }
}

@media (max-width: var(--breakpoint-sm)) {
  .dominoHand:has(.handDomino.vertical) .dominoGap {
    width: var(--width-domino-gap-vertical-mobile);
    height: var(--height-domino-gap-vertical-mobile);
  }
}

/* Animation for domino interactions */
.handDomino {
  animation-duration: var(--duration-fast);
  animation-timing-function: var(--easing-out);
  animation-fill-mode: both;
}

.handDomino.playable {
  cursor: var(--cursor-pointer);
}

.handDomino.playable:hover {
  animation-name: dominoHover;
}

.handDomino.selected {
  animation-name: dominoSelect;
}

@keyframes dominoHover {
  0% {
    transform: var(--transform-none);
  }
  100% {
    transform: translateY(calc(var(--space-xxs) * -1));
  }
}

@keyframes dominoSelect {
  0% {
    transform: var(--transform-none);
  }
  100% {
    transform: translateY(calc(var(--space-xs) * -1));
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .handDomino {
    transition: var(--transition-none);
    animation: var(--animation-none);
  }
  
  .handDomino:hover,
  .handDomino.selected {
    transform: var(--transform-none);
  }
  
  @keyframes dominoHover {
    0%, 100% {
      transform: var(--transform-none);
    }
  }

  @keyframes dominoSelect {
    0%, 100% {
      transform: var(--transform-none);
    }
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .dominoHand {
    background: var(--surface-dark);
    border: var(--border-default) solid var(--text-primary);
  }
  
  .dominoGap {
    border-color: var(--text-primary);
    background: var(--surface-overlay-dark);
  }
  
  .dominoGap::before {
    border-color: var(--text-primary);
    background: var(--surface-glass-light);
  }
}

/* Focus management for keyboard navigation */
.handDomino:focus-within {
  outline: var(--outline-focus);
  outline-offset: var(--space-xxs);
  border-radius: var(--radius-base);
}

/* Player position specific adjustments */
.dominoHand.playerNorth,
.dominoHand.playerSouth {
  /* Horizontal layout for north/south players */
}

.dominoHand.playerEast,
.dominoHand.playerWest {
  /* Could be adjusted for vertical layout if needed */
  transform: var(--transform-rotate-none);
}

/* Opponent hand styling (face-down dominoes) */
.dominoHand:has(.handDomino.faceDown) {
  opacity: var(--opacity-high);
}

.dominoHand:has(.handDomino.faceDown) .handDomino:hover {
  transform: translateY(calc(var(--space-xxs) * -0.5));
}

.dominoHand:has(.handDomino.faceDown) .handDomino.selected {
  transform: translateY(calc(var(--space-xxs) * -1));
}
